---

###
### Diff State Store
###
- name: "({{ cluster.name }}) diff generated cluster config against remote state store"
  udiff:
    source: "{{ lookup('template', 'cluster.yml.j2') }}"
    target: |
      # If using boto_profile, make kops aware of it
      if [ -n "${BOTO_PROFILE}" ]; then
        export AWS_PROFILE="${BOTO_PROFILE}";
      fi
      # Don't fail to show that remote has nothing yet
      kops get cluster -o yaml \
        --state s3://{{ cluster.s3_bucket_name }} \
        --name {{ cluster.name }} || true
    source_type: string
    target_type: command
    diff: yaml
    diff_yaml_ignore: ['creationTimestamp']
  check_mode: False
  register: _kops_diff_state_cluster
  environment:
    BOTO_PROFILE: "{{ kops_aws_profile | default('') }}"
  when:
    - kops_update is defined
    - kops_update == 'state' or kops_update == 'update' or kops_update == 'all'

- name: "({{ cluster.name }}) diff generated instance group config against remote state store"
  udiff:
    source: "{{ lookup('template', 'instance-groups.yml.j2') }}"
    target: |
      # If using boto_profile, make kops aware of it
      if [ -n "${BOTO_PROFILE}" ]; then
        export AWS_PROFILE="{{ kops_aws_profile | default('') }}";
      fi
      # Don't fail to show that remote has nothing yet
      kops get instancegroups -o yaml \
        --state s3://{{ cluster.s3_bucket_name }} \
        --name {{ cluster.name }} || true
    source_type: string
    target_type: command
    diff: yaml
    diff_yaml_ignore: ['creationTimestamp']
  check_mode: False
  register: _kops_diff_state_instancegroups
  environment:
    BOTO_PROFILE: "{{ kops_aws_profile | default('') }}"
  when:
    - kops_update is defined
    - kops_update == 'state' or kops_update == 'update' or kops_update == 'all'

- name: "({{ cluster.name }}) diff generated EncryptionConfiguration against remote state store"
  udiff:
    source: "{{ lookup('template', 'encryption-config.yml.j2') }}"
    target: |
      # If using boto_profile, make kops aware of it
      if [ -n "${BOTO_PROFILE}" ]; then
        export AWS_PROFILE="{{ kops_aws_profile | default('') }}";
      fi
      # Don't fail to show that remote has nothing yet
      kops get secret encryptionconfig -o plaintext \
        --state s3://{{ cluster.s3_bucket_name }} \
        --name {{ cluster.name }} || true
    source_type: string
    target_type: command
    diff: yaml
    diff_yaml_ignore: ['metadata']
  check_mode: False
  register: _kops_diff_state_encryptionconfig
  environment:
    BOTO_PROFILE: "{{ kops_aws_profile | default('') }}"
  when:
    - kops_update is defined
    - kops_update == 'state' or kops_update == 'update' or kops_update == 'all'

- name: "({{ cluster.name }}) diff ssh public key against remote state store"
  udiff:
    source: |
      # Test SSH key for validity
      if ! bash -c "ssh-keygen -lf <(echo '{{ lookup('template', 'ssh-key.pub.j2') }}')" >/dev/null; then
        exit 1;
      fi
      # Get SSH key fingerprint only
      bash -c "ssh-keygen -lE md5 -f <(echo '{{ lookup('template', 'ssh-key.pub.j2') }}')" \
        | awk '{ print $2}' | sed 's/^MD5://g'
    target: |
      # If using boto_profile, make kops aware of it
      if [ -n "${BOTO_PROFILE}" ]; then
        export AWS_PROFILE="{{ kops_aws_profile | default('') }}";
      fi
      # Don't fail to show that remote has nothing yet
      kops get sshpublickey \
        --state s3://{{ cluster.s3_bucket_name }} \
        --name {{ cluster.name }} \
        | grep -Eo "[:a-f0-9]{16,}" || true
    source_type: command
    target_type: command
  check_mode: False
  register: _kops_diff_state_sshkey
  environment:
    BOTO_PROFILE: "{{ kops_aws_profile | default('') }}"
  when:
    - kops_update is defined
    - kops_update == 'state' or kops_update == 'update' or kops_update == 'all'

- name: "({{ cluster.name }}) generate dockerconfig creds variable"
  set_fact:
    _kops_dockerconfig: "{{ lookup('template', 'dockerconfig.json.j2') | to_nice_json(indent=2) | quote }}"
  when:
    - kops_dockerconfig_creds is defined

- name: "({{ cluster.name }}) diff dockerconfig against remote state store"
  udiff:
    source: "{{ _kops_dockerconfig | default('') }}"
    target: |
      # If using boto_profile, make kops aware of it
      if [ -n "${BOTO_PROFILE}" ]; then
        export AWS_PROFILE="{{ kops_aws_profile | default('') }}";
      fi
      # Don't fail to show that remote has nothing yet
      _old_dockerconfig=`kops get secret dockerconfig --type secret -o plaintext \
        --state s3://{{ cluster.s3_bucket_name }} \
        --name {{ cluster.name }} 2>&1 \
        | grep -ve "^$" | grep -v -e "Secret not found"` || true
      if [ "$_old_dockerconfig" != "" ]; then
        echo -n "'$_old_dockerconfig'"
      fi
    source_type: string
    target_type: command
    diff: raw
  check_mode: False
  register: _kops_diff_state_dockerconfig
  environment:
    BOTO_PROFILE: "{{ kops_aws_profile | default('') }}"
  when:
    - kops_update is defined
    - kops_update == 'state' or kops_update == 'update' or kops_update == 'all'


###
### Update State Store
###
- name: "({{ cluster.name }}) update state store for cluster spec"
  shell: |
    # If using boto_profile, make kops aware of it
    if [ -n "${BOTO_PROFILE}" ]; then
      export AWS_PROFILE="{{ kops_aws_profile | default('') }}";
    fi
    kops replace -v 9 --force \
      --state s3://{{ cluster.s3_bucket_name }} \
      --name {{ cluster.name }} \
      -f {{ kops_default_build_directory }}/{{ cluster.name }}/cluster.yml
  args:
    executable: bash
  environment:
    BOTO_PROFILE: "{{ kops_aws_profile | default('') }}"
  when:
    - _kops_diff_state_cluster['changed']
    - kops_update is defined
    - kops_update == 'state' or kops_update == 'update' or kops_update == 'all'

- name: "({{ cluster.name }}) update state store for instance groups"
  shell: |
    # If using boto_profile, make kops aware of it
    if [ -n "${BOTO_PROFILE}" ]; then
      export AWS_PROFILE="{{ kops_aws_profile | default('') }}";
    fi
    kops replace -v 9 --force \
      --state s3://{{ cluster.s3_bucket_name }} \
      --name {{ cluster.name }} \
      -f {{ kops_default_build_directory }}/{{ cluster.name }}/instance-groups.yml
  args:
    executable: bash
  environment:
    BOTO_PROFILE: "{{ kops_aws_profile | default('') }}"
  when:
    - _kops_diff_state_instancegroups['changed']
    - kops_update is defined
    - kops_update == 'state' or kops_update == 'update' or kops_update == 'all'

- name: "({{ cluster.name }}) update state store for EncryptionConfiguration"
  shell: |
    # If using boto_profile, make kops aware of it
    if [ -n "${BOTO_PROFILE}" ]; then
      export AWS_PROFILE="{{ kops_aws_profile | default('') }}";
    fi
    kops create secret encryptionconfig -v 9 --force \
      --state s3://{{ cluster.s3_bucket_name }} \
      --name {{ cluster.name }} \
      -f {{ kops_default_build_directory }}/{{ cluster.name }}/encryption-config.yml
  args:
    executable: bash
  environment:
    BOTO_PROFILE: "{{ kops_aws_profile | default('') }}"
  when:
    - _kops_diff_state_encryptionconfig['changed']
    - kops_update is defined
    - kops_update == 'state' or kops_update == 'update' or kops_update == 'all'

- name: "({{ cluster.name }}) update state store for ssh public key"
  shell: |
    # If using boto_profile, make kops aware of it
    if [ -n "${BOTO_PROFILE}" ]; then
      export AWS_PROFILE="{{ kops_aws_profile | default('') }}";
    fi
    # Delete first
    kops delete -v 9 secret \
      --state s3://{{ cluster.s3_bucket_name }} \
      --name {{ cluster.name }} \
      sshpublickey admin || true;
    # Re-create
    kops create -v 9 secret \
      --state s3://{{ cluster.s3_bucket_name }} \
      --name {{ cluster.name }} \
      sshpublickey admin -i <(echo "{{ lookup('template', 'ssh-key.pub.j2') }}")
  args:
    executable: bash
  environment:
    BOTO_PROFILE: "{{ kops_aws_profile | default('') }}"
  when:
    - _kops_diff_state_sshkey['changed']
    - kops_update is defined
    - kops_update == 'state' or kops_update == 'update' or kops_update == 'all'

- name: "({{ cluster.name }}) update state store for secret dockerconfig"
  shell: |
    # If using boto_profile, make kops aware of it
    if [ -n "${BOTO_PROFILE}" ]; then
      export AWS_PROFILE="{{ kops_aws_profile | default('') }}";
    fi
    kops create secret dockerconfig --force \
      --state s3://{{ cluster.s3_bucket_name }} \
      --name {{ cluster.name }} \
      -f {{ kops_default_build_directory }}/{{ cluster.name }}/dockerconfig.json
  args:
    executable: bash
  environment:
    BOTO_PROFILE: "{{ kops_aws_profile | default('') }}"
  when:
    - _kops_diff_state_dockerconfig['changed']
    - kops_dockerconfig_creds is defined
    - kops_update is defined
    - kops_update == 'state' or kops_update == 'update' or kops_update == 'all'

- name: "({{ cluster.name }}) delete state store for secret dockerconfig"
  shell: |
    # If using boto_profile, make kops aware of it
    if [ -n "${BOTO_PROFILE}" ]; then
      export AWS_PROFILE="{{ kops_aws_profile | default('') }}";
    fi
    # Dont fail to remove non-exist secret
    kops delete secret secret dockerconfig \
      --state s3://{{ cluster.s3_bucket_name }} \
      --name {{ cluster.name }} || true
  args:
    executable: bash
  environment:
    BOTO_PROFILE: "{{ kops_aws_profile | default('') }}"
  when:
    - kops_dockerconfig_creds is not defined
    - _kops_diff_state_dockerconfig['changed']
    - kops_update is defined
    - kops_update == 'state' or kops_update == 'update' or kops_update == 'all'


###
### Update Cluster
###
- name: "({{ cluster.name }}) diff kubernetes updates"
  shell: |
    # If using boto_profile, make kops aware of it
    if [ -n "${BOTO_PROFILE}" ]; then
      export AWS_PROFILE="{{ kops_aws_profile | default('') }}";
    fi
    if ! stdout="$( kops update cluster \
      --create-kube-config=false \
      --state s3://{{ cluster.s3_bucket_name }} \
      --name {{ cluster.name }} )"; then \
      exit 1;
    else
      echo "${stdout}" \
        | grep -Ev '^No changes need to be applied' \
        || true
    fi
  check_mode: False
  register: _kops_diff_cluster_update
  changed_when: "_kops_diff_cluster_update.stdout != ''"
  environment:
    BOTO_PROFILE: "{{ kops_aws_profile | default('') }}"
  when:
    - kops_update is defined
    - kops_update == 'update' or kops_update == 'all'

- name: "({{ cluster.name }}) show diffed kubernetes updates"
  debug:
    msg: "{{ (_kops_diff_cluster_update.stdout_lines | join('\\n') | regex_replace('\\t', '')).split('\\n') }}"
  check_mode: False
  changed_when: "_kops_diff_cluster_update.stdout != ''"
  when:
    - kops_update is defined
    - kops_update == 'update' or kops_update == 'all'
    - _kops_diff_cluster_update.stdout_lines is defined

- name: "({{ cluster.name }}) update kubernetes cluster"
  shell: |
    # If using boto_profile, make kops aware of it
    if [ -n "${BOTO_PROFILE}" ]; then
      export AWS_PROFILE="{{ kops_aws_profile | default('') }}";
    fi
    kops update cluster \
      --create-kube-config=false \
      --state s3://{{ cluster.s3_bucket_name }} \
      --name {{ cluster.name }} \
      --yes
  environment:
    BOTO_PROFILE: "{{ kops_aws_profile | default('') }}"
  when:
    - _kops_diff_cluster_update['changed']
    - kops_update is defined
    - kops_update == 'update' or kops_update == 'all'
