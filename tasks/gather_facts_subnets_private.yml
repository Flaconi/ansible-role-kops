---

###
### Gather subnet
###

- name: "({{ cluster.name }}) set private subnet filter"
  set_fact:
    kops_subnet_private_filters:
      - key: state
        val: available
      - key: vpc-id
        val: "{{ kops_vpc_id }}"
      - key: availability-zone
        val: "{{ cluster.region | default(kops_default_region) }}{{ az }}"
      - key: "tag:Name"
        val: "{{ cluster.region | default(kops_default_region) }}{{ az }}.{{ cluster.name }}"
      - key: "tag:SubnetType"
        val: Private
      - key: "tag:kubernetes.io/cluster/{{ cluster.name }}"
        val: shared
      - key: "tag:kubernetes.io/role/internal-elb"
        val: "1"

- name: "({{ cluster.name }}) gather private subnet facts"
  ec2_vpc_subnet_facts:
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY') | default(omit) }}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_KEY') | default(omit)  }}"
    security_token: "{{ lookup('env', 'AWS_SECURITY_TOKEN') | default(omit) }}"
    profile: "{{ kops_aws_profile | default(omit) }}"
    region: "{{ cluster.region | default(kops_default_region) }}"
    filters: "{{ kops_subnet_private_filters | get_attr('key', 'val') }}"
  register: _kops_subnet_private_facts

- name: "({{ cluster.name }}) fail if not exactly one private subnet was not found"
  assert:
    that:
      - _kops_subnet_private_facts.subnets is defined
      - _kops_subnet_private_facts.subnets | length == 1
    msg: "Not exactly one private subnet has been found in az: {{ az }}"


###
### Set return variable
###

- name: "({{ cluster.name }}) set private dict item"
  set_fact:
    kops_private_item: |
      {{
        {
          _kops_subnet_private_facts.subnets[0].availability_zone | regex_search('(.?)$', '\1') | first: {
            'id':     _kops_subnet_private_facts.subnets[0].id,
            'az':     _kops_subnet_private_facts.subnets[0].availability_zone,
            'cidr':   _kops_subnet_private_facts.subnets[0].cidr_block
          }
        }
      }}

- name: "({{ cluster.name }}) merge private subnet array"
  set_fact:
    kops_private_subnets: "{{ kops_private_subnets | combine(kops_private_item) }}"
