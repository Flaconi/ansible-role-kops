---

- name: "({{ cluster.name }}) set VPC filter"
  set_fact:
    kops_vpc_filters:
      - key: state
        val: available
      - key: "tag:Name"
        val: "{{ cluster.name }}"
      - key: "tag:kubernetes.io/cluster/{{ cluster.name }}"
        val: shared

- name: "({{ cluster.name }}) gather vpc facts"
  ec2_vpc_net_facts:
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY') | default(omit) }}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_KEY') | default(omit)  }}"
    security_token: "{{ lookup('env', 'AWS_SECURITY_TOKEN') | default(omit) }}"
    profile: "{{ kops_aws_profile | default(omit) }}"
    region: "{{ cluster.region | default(kops_default_region) }}"
    filters: "{{ kops_vpc_filters | get_attr('key', 'val') }}"
  register: _kops_vpc_facts

- name: "({{ cluster.name }}) fail if vpc was not found"
  assert:
    that:
      - _kops_vpc_facts.vpcs is defined
      - _kops_vpc_facts.vpcs | length == 1
    msg: Not exactly one VPC has been found

- name: "({{ cluster.name }}) set vpc id"
  set_fact:
    kops_vpc_id: "{{ _kops_vpc_facts.vpcs[0].id }}"

- name: "({{ cluster.name }}) set vpc cidr"
  set_fact:
    kops_vpc_cidr: "{{ _kops_vpc_facts.vpcs[0].cidr_block }}"
